{"ast":null,"code":"var _jsxFileName = \"/Users/DeborahLiu/Desktop/mywebsite/frontend/my-app/src/newRecord.js\";\nimport React, { Component } from \"react\";\nimport Cookies from \"js-cookie\";\nimport NewTransaction from \"./NewTransaction\";\nimport Table from \"react-table-6\";\nimport 'react-table-6/react-table.css';\nimport axios from 'axios';\n\nclass newRecord extends Component {\n  constructor() {\n    super();\n\n    this.getRecordFromDb = id => {\n      axios.post('http://localhost:3001/api/getRecord', {\n        id: id\n      }).then(res => {\n        if (res.success == true) {\n          const record = res.record;\n          this.setState({\n            sharedBy: record.sharedBy,\n            recordId: record._id,\n            date: record.date,\n            created: true\n          });\n        } else {\n          alert(res);\n        }\n      });\n    };\n\n    this.getTransactionFromDb = () => {\n      fetch('http://localhost:3001/api/getTransaction').then(transactions => transactions.json()).then(res => {\n        this.setState({\n          transactions: res.transactions\n        });\n      });\n      console.log(this.state.transactions);\n    };\n\n    this.addSharedBy = name => {\n      var temp = [...this.state.sharedBy];\n      temp.push(name);\n      this.setState({\n        sharedBy: temp\n      });\n      var num = this.state.numShared + 1;\n      this.setState({\n        numShared: num\n      });\n      console.log(this.state.sharedBy);\n      console.log(this.state.numShared);\n      console.log(this.state.currentName);\n      console.log(this.state.owner);\n    };\n\n    this.createRecord = event => {\n      axios.post('http://localhost:3001/api/putRecord', {\n        owner: this.state.owner,\n        date: this.state.date,\n        transactions: []\n      }).then(response => {\n        if (response.data.success) {\n          this.setState({\n            recordId: response.data.recordId\n          });\n          Cookies.set('recordId', response.data.recordId);\n          this.setState({\n            created: true\n          });\n        }\n      });\n    };\n\n    this.state = {\n      recordId: Cookies.get('recordId'),\n      owner: Cookies.get(\"name\"),\n      date: null,\n      transactions: [],\n      currentName: null,\n      sharedBy: [Cookies.get(\"name\")],\n      numShared: 1,\n      intervalIsSet: false,\n      created: false,\n      errors: {}\n    };\n    this.getRecordFromDb = this.getRecordFromDb.bind(this);\n  }\n\n  componentDidMount() {\n    alert(this.state.recordId);\n    this.getRecordFromDb(this.state.recordId);\n    this.getTransactionFromDb();\n\n    if (!this.state.intervalIsSet) {\n      let interval = setInterval(this.getDataFromDb, 1000);\n      this.setState({\n        intervalIsSet: interval\n      });\n    } //   Cookies.remove('recordId');\n\n  }\n\n  componentWillUnmount() {\n    if (this.state.intervalIsSet) {\n      clearInterval(this.state.intervalIsSet);\n      this.setState({\n        intervalIsSet: null\n      });\n    }\n  }\n\n  render() {\n    const columns = [{\n      Header: 'Payer',\n      accessor: 'payer'\n    }, {\n      Header: 'Amount',\n      accessor: 'amount'\n    }, {\n      Header: 'Shared With',\n      accessor: 'displayShared'\n    }, {\n      Header: 'Comment',\n      accessor: 'comment'\n    }];\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, \"Creating new record for \", this.state.owner, \"...\", React.createElement(\"label\", {\n      style: this.state.created ? {\n        display: 'none'\n      } : {},\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, \"Shared with:\", this.state.sharedBy, React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"name\",\n      onChange: e => this.setState({\n        currentName: e.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: () => this.addSharedBy(this.state.currentName),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, \"Add Sharer\"), React.createElement(\"input\", {\n      type: \"date\",\n      placeholder: \"date\",\n      onChange: e => this.setState({\n        date: e.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: e => this.createRecord(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, \"Create New Record\")), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, React.createElement(Table, {\n      columns: columns,\n      data: this.state.transactions,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, React.createElement(NewTransaction, {\n      sharedPeople: this.state.sharedBy,\n      num: this.state.numShared,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default newRecord;","map":{"version":3,"sources":["/Users/DeborahLiu/Desktop/mywebsite/frontend/my-app/src/newRecord.js"],"names":["React","Component","Cookies","NewTransaction","Table","axios","newRecord","constructor","getRecordFromDb","id","post","then","res","success","record","setState","sharedBy","recordId","_id","date","created","alert","getTransactionFromDb","fetch","transactions","json","console","log","state","addSharedBy","name","temp","push","num","numShared","currentName","owner","createRecord","event","response","data","set","get","intervalIsSet","errors","bind","componentDidMount","interval","setInterval","getDataFromDb","componentWillUnmount","clearInterval","render","columns","Header","accessor","display","e","target","value"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Cookies from \"js-cookie\";\nimport NewTransaction from \"./NewTransaction\";\nimport Table from \"react-table-6\";\nimport 'react-table-6/react-table.css'\nimport axios from 'axios';\n\nclass newRecord extends Component {\n\n  constructor() {\n    super();\n\n    this.state = {\n    recordId: Cookies.get('recordId'),\n    owner: Cookies.get(\"name\"),\n    date: null,\n    transactions: [],\n    currentName: null,\n    sharedBy: [Cookies.get(\"name\")],\n    numShared: 1,\n    intervalIsSet: false,\n    created: false,\n    errors: {}\n  };\n\n  this.getRecordFromDb = this.getRecordFromDb.bind(this);\n\n}\n\n  componentDidMount() {\n  \n    alert(this.state.recordId);\n    this.getRecordFromDb(this.state.recordId);\n\n    this.getTransactionFromDb();\n    if (!this.state.intervalIsSet) {\n      let interval = setInterval(this.getDataFromDb, 1000);\n      this.setState({ intervalIsSet: interval });\n    }\n //   Cookies.remove('recordId');\n  }\n\n  componentWillUnmount() {\n    if (this.state.intervalIsSet) {\n      clearInterval(this.state.intervalIsSet);\n      this.setState({ intervalIsSet: null });\n    }\n\n  }\n\n\n  getRecordFromDb = (id) => {\n    axios.post('http://localhost:3001/api/getRecord',{\n      id: id,\n    })\n      .then((res) => {\n        if(res.success == true){\n        const record = res.record;\n        this.setState({ sharedBy: record.sharedBy, recordId: record._id, date: record.date, created: true})\n        }\n        else{\n          alert(res);\n        }\n\n      });\n  };\n\n  getTransactionFromDb = () => {\n    fetch('http://localhost:3001/api/getTransaction')\n      .then((transactions) => transactions.json())\n      .then((res) => {\n        this.setState({ transactions: res.transactions});\n        });\n      console.log(this.state.transactions);\n  };\n\n  addSharedBy = (name) => {\n    var temp = [...this.state.sharedBy];\n    temp.push(name);\n    this.setState({sharedBy: temp});\n    var num = this.state.numShared + 1;\n    this.setState({numShared:num});\n    console.log(this.state.sharedBy);\n    console.log(this.state.numShared);\n    console.log(this.state.currentName);\n    console.log(this.state.owner);\n  };\n\n  createRecord = (event) =>{\n      axios.post('http://localhost:3001/api/putRecord', {\n        owner: this.state.owner,\n        date: this.state.date,\n        transactions: [],\n    }).then((response) => {\n        if(response.data.success){\n          this.setState({recordId: response.data.recordId});\n          Cookies.set('recordId',response.data.recordId);\n          this.setState({created: true});\n        }\n    });\n  };\n\n\n  \n  render() {\n    const columns = [\n            {\n              Header: 'Payer',\n              accessor: 'payer',\n            },\n            {\n              Header: 'Amount',\n              accessor: 'amount',\n            },\n            {\n              Header: 'Shared With',\n              accessor: 'displayShared'\n            },\n            {\n              Header: 'Comment',\n              accessor: 'comment',\n            },\n          ]\n\n    return (\n\n      <div>\n\n          Creating new record for {this.state.owner}...\n          <label style={this.state.created ? {display: 'none'} : {}}>\n            Shared with:{this.state.sharedBy}\n            <input type=\"text\" placeholder=\"name\" onChange={(e) => this.setState({ currentName: e.target.value })}></input>\n            <button onClick={() =>this.addSharedBy(this.state.currentName)}>Add Sharer</button>\n            <input type=\"date\" placeholder=\"date\" onChange={(e) => this.setState({ date: e.target.value})}></input>\n            <button onClick={(e) => this.createRecord(e)}>Create New Record</button>\n          </label>\n          \n        <div>\n          <Table columns={columns} data={this.state.transactions} />\n        </div>    \n        <div>\n        <NewTransaction sharedPeople={this.state.sharedBy} num={this.state.numShared}  />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default newRecord;\n"]},"metadata":{},"sourceType":"module"}