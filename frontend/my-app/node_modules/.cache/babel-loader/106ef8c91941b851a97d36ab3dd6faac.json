{"ast":null,"code":"var _jsxFileName = \"/Users/DeborahLiu/Desktop/mywebsite/frontend/my-app/src/newRecord.js\";\nimport React, { Component } from \"react\";\nimport Cookies from \"js-cookie\";\nimport NewTransaction from \"./NewTransaction\";\nimport Table from \"react-table-6\";\nimport 'react-table-6/react-table.css';\nimport axios from 'axios';\nimport { BrowserRouter as Router, Link } from \"react-router-dom\";\n\nclass newRecord extends Component {\n  constructor() {\n    super();\n\n    this.getRecordFromDb = id => {\n      axios.post('http://localhost:3001/api/getRecord', {\n        id: id\n      }).then(res => {\n        if (res.data.success == true) {\n          console.log(res.data.record);\n          const record = res.data.record;\n          this.setState({\n            sharedBy: record.sharedBy,\n            recordId: record._id,\n            date: record.date,\n            created: true\n          });\n          console.log(this.state.sharedBy);\n        } else {\n          alert(res);\n        }\n      });\n    };\n\n    this.getTransactionFromDb = id => {\n      console.log(id);\n      axios.post('http://localhost:3001/api/getTransaction', {\n        recordId: id\n      }).then(res => {\n        console.log(res.data.transactions);\n        this.setState({\n          transactions: res.data.transactions\n        });\n      });\n      console.log(this.state.transactions);\n    };\n\n    this.addSharedBy = name => {\n      var temp = [...this.state.sharedBy];\n      temp.push(name);\n      this.setState({\n        sharedBy: temp\n      });\n      var num = this.state.numShared + 1;\n      this.setState({\n        numShared: num\n      });\n      console.log(this.state.sharedBy);\n      console.log(this.state.numShared);\n      console.log(this.state.currentName);\n      console.log(this.state.owner);\n    };\n\n    this.createRecord = event => {\n      axios.post('http://localhost:3001/api/putRecord', {\n        owner: this.state.owner,\n        date: this.state.date,\n        sharedBy: this.state.sharedBy,\n        transactions: []\n      }).then(response => {\n        if (response.data.success) {\n          this.setState({\n            recordId: response.data.recordId\n          });\n          Cookies.set('recordId', response.data.recordId);\n          this.setState({\n            created: true\n          });\n        }\n      });\n    };\n\n    this.logout = () => {\n      Cookies.remove(this.state.owner);\n      Cookies.remove(this.state.recordId);\n    };\n\n    this.state = {\n      recordId: Cookies.get('recordId'),\n      owner: Cookies.get('name'),\n      date: null,\n      transactions: [],\n      currentName: null,\n      sharedBy: [Cookies.get(\"name\")],\n      numShared: 1,\n      intervalIsSet: false,\n      created: false,\n      errors: {}\n    };\n    this.getRecordFromDb = this.getRecordFromDb.bind(this);\n  }\n\n  componentDidMount() {\n    //    alert(this.state.recordId);\n    this.getRecordFromDb(this.state.recordId);\n\n    if (this.state.recordId != null) {\n      this.getTransactionFromDb(this.state.recordId);\n    }\n\n    if (!this.state.intervalIsSet) {\n      let interval = setInterval(this.getDataFromDb, 1000);\n      this.setState({\n        intervalIsSet: interval\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.state.intervalIsSet) {\n      clearInterval(this.state.intervalIsSet);\n      this.setState({\n        intervalIsSet: null\n      });\n    }\n  }\n\n  render() {\n    const columns = [{\n      Header: 'Payer',\n      accessor: 'payer'\n    }, {\n      Header: 'Amount',\n      accessor: 'amount'\n    }, {\n      Header: 'Shared With',\n      accessor: 'displayShared'\n    }, {\n      Header: 'Comment',\n      accessor: 'comment'\n    }];\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, \"Creating new record for \", this.state.owner, \"...\", React.createElement(\"label\", {\n      style: this.state.created ? {\n        display: 'none'\n      } : {},\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, \"Shared with:\", this.state.sharedBy, React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"name\",\n      onChange: e => this.setState({\n        currentName: e.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: () => this.addSharedBy(this.state.currentName),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, \"Add Sharer\"), React.createElement(\"input\", {\n      type: \"date\",\n      placeholder: \"date\",\n      onChange: e => this.setState({\n        date: e.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: e => this.createRecord(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, \"Create New Record\")), React.createElement(Link, {\n      to: \"/\",\n      onClick: this.logout(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, \"Log out\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, React.createElement(Table, {\n      columns: columns,\n      data: this.state.transactions,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, React.createElement(NewTransaction, {\n      sharedPeople: this.state.sharedBy,\n      num: this.state.numShared,\n      recordID: this.state.recordId,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default newRecord;","map":{"version":3,"sources":["/Users/DeborahLiu/Desktop/mywebsite/frontend/my-app/src/newRecord.js"],"names":["React","Component","Cookies","NewTransaction","Table","axios","BrowserRouter","Router","Link","newRecord","constructor","getRecordFromDb","id","post","then","res","data","success","console","log","record","setState","sharedBy","recordId","_id","date","created","state","alert","getTransactionFromDb","transactions","addSharedBy","name","temp","push","num","numShared","currentName","owner","createRecord","event","response","set","logout","remove","get","intervalIsSet","errors","bind","componentDidMount","interval","setInterval","getDataFromDb","componentWillUnmount","clearInterval","render","columns","Header","accessor","display","e","target","value"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Cookies from \"js-cookie\";\nimport NewTransaction from \"./NewTransaction\";\nimport Table from \"react-table-6\";\nimport 'react-table-6/react-table.css'\nimport axios from 'axios';\nimport { BrowserRouter as Router, Link } from \"react-router-dom\"\n\n\nclass newRecord extends Component {\n\n  constructor() {\n    super();\n\n    this.state = {\n    recordId: Cookies.get('recordId'),\n    owner: Cookies.get('name'),\n    date: null,\n    transactions: [],\n    currentName: null,\n    sharedBy: [Cookies.get(\"name\")],\n    numShared: 1,\n    intervalIsSet: false,\n    created: false,\n    errors: {}\n  };\n\n  this.getRecordFromDb = this.getRecordFromDb.bind(this);\n\n}\n\n  componentDidMount() {\n  \n//    alert(this.state.recordId);\n    this.getRecordFromDb(this.state.recordId);\n    if(this.state.recordId != null){\n    this.getTransactionFromDb(this.state.recordId);\n    }\n    if (!this.state.intervalIsSet) {\n      let interval = setInterval(this.getDataFromDb, 1000);\n      this.setState({ intervalIsSet: interval });\n    }\n\n  }\n\n  componentWillUnmount() {\n    if (this.state.intervalIsSet) {\n      clearInterval(this.state.intervalIsSet);\n      this.setState({ intervalIsSet: null });\n    }\n\n  }\n\n\n  getRecordFromDb = (id) => {\n    axios.post('http://localhost:3001/api/getRecord',{\n      id: id,\n    })\n      .then((res) => {\n        if(res.data.success == true){\n        console.log(res.data.record);\n        const record = res.data.record;\n        this.setState({ sharedBy: record.sharedBy, recordId: record._id, date: record.date, created: true})\n        console.log(this.state.sharedBy);\n      }\n        else{\n          alert(res);\n        }\n\n      });\n  };\n\n  getTransactionFromDb = (id) => {\n    console.log(id);\n    axios.post('http://localhost:3001/api/getTransaction', {\n      recordId: id,\n    })\n      .then((res) => {\n        console.log(res.data.transactions);\n        this.setState({ transactions: res.data.transactions});\n        });\n      console.log(this.state.transactions);\n  };\n\n  addSharedBy = (name) => {\n    var temp = [...this.state.sharedBy];\n    temp.push(name);\n    this.setState({sharedBy: temp});\n    var num = this.state.numShared + 1;\n    this.setState({numShared:num});\n    console.log(this.state.sharedBy);\n    console.log(this.state.numShared);\n    console.log(this.state.currentName);\n    console.log(this.state.owner);\n  };\n\n  createRecord = (event) =>{\n      axios.post('http://localhost:3001/api/putRecord', {\n        owner: this.state.owner,\n        date: this.state.date,\n        sharedBy: this.state.sharedBy,\n        transactions: [],\n    }).then((response) => {\n        if(response.data.success){\n          this.setState({recordId: response.data.recordId});\n          Cookies.set('recordId',response.data.recordId);\n          this.setState({created: true});\n        }\n    });\n  };\n\n  logout = () => {\n    Cookies.remove(this.state.owner);\n    Cookies.remove(this.state.recordId);\n}\n\n\n  \n  render() {\n    const columns = [\n            {\n              Header: 'Payer',\n              accessor: 'payer',\n            },\n            {\n              Header: 'Amount',\n              accessor: 'amount',\n            },\n            {\n              Header: 'Shared With',\n              accessor: 'displayShared'\n            },\n            {\n              Header: 'Comment',\n              accessor: 'comment',\n            },\n          ]\n\n    return (\n\n      <div>\n\n          Creating new record for {this.state.owner}...\n          <label style={this.state.created ? {display: 'none'} : {}}>\n            Shared with:{this.state.sharedBy}\n            <input type=\"text\" placeholder=\"name\" onChange={(e) => this.setState({ currentName: e.target.value })}></input>\n            <button onClick={() =>this.addSharedBy(this.state.currentName)}>Add Sharer</button>\n            <input type=\"date\" placeholder=\"date\" onChange={(e) => this.setState({ date: e.target.value})}></input>\n            <button onClick={(e) => this.createRecord(e)}>Create New Record</button>\n          </label>\n          <Link to='/' onClick={this.logout()}>\n                    Log out\n                </Link>\n          \n        <div>\n          <Table columns={columns} data={this.state.transactions} />\n        </div>    \n        <div>\n        <NewTransaction sharedPeople={this.state.sharedBy} num={this.state.numShared} recordID={this.state.recordId} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default newRecord;\n"]},"metadata":{},"sourceType":"module"}