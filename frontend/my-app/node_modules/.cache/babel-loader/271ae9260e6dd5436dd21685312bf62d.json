{"ast":null,"code":"var _jsxFileName = \"/Users/DeborahLiu/Desktop/mywebsite/frontend/my-app/src/newRecord.js\";\nimport React, { Component } from \"react\";\nimport Cookies from \"js-cookie\";\nimport NewTransaction from \"./NewTransaction\";\nimport Table from \"react-table-6\";\nimport 'react-table-6/react-table.css';\n\nclass newRecord extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      owner: Cookies.get(\"name\"),\n      transactions: [],\n      currentName: null,\n      sharedBy: [Cookies.get(\"name\")],\n      numShared: 1,\n      intervalIsSet: false,\n      errors: {}\n    };\n\n    this.getTransactionFromDb = () => {\n      fetch('http://localhost:3001/api/getTransaction').then(transactions => transactions.json()).then(res => this.setState({\n        transactions: res.transactions\n      }));\n    };\n\n    this.addSharedBy = name => {\n      var temp = [...this.state.sharedBy];\n      temp.push(name);\n      this.setState({\n        sharedBy: temp\n      });\n      var num = this.state.numShared + 1;\n      this.setState({\n        numShared: num\n      });\n      console.log(this.state.sharedBy);\n      console.log(this.state.numShared);\n      console.log(this.state.currentName);\n      console.log(this.state.owner);\n    };\n  }\n\n  componentDidMount() {\n    this.getTransactionFromDb();\n\n    if (!this.state.intervalIsSet) {\n      let interval = setInterval(this.getDataFromDb, 1000);\n      this.setState({\n        intervalIsSet: interval\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.state.intervalIsSet) {\n      clearInterval(this.state.intervalIsSet);\n      this.setState({\n        intervalIsSet: null\n      });\n    }\n  }\n\n  render() {\n    const columns = [{\n      Header: 'Payer',\n      accessor: 'payer'\n    }, {\n      Header: 'Amount',\n      accessor: 'amount'\n    }, {\n      Header: 'Shared With',\n      accessor: 'sharedBy'\n    }, {\n      Header: 'Comment',\n      accessor: 'comment'\n    }];\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"Creating new record for \", this.state.owner, \"...\", React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"Shared with:\", React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"name\",\n      onChange: e => this.setState({\n        currentName: e.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: () => this.addSharedBy(this.state.currentName),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \"Add Sharer\")), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(Table, {\n      columns: columns,\n      data: this.state.transactions,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(NewTransaction, {\n      sharedPeople: this.state.sharedBy,\n      num: this.state.numShared,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default newRecord;","map":{"version":3,"sources":["/Users/DeborahLiu/Desktop/mywebsite/frontend/my-app/src/newRecord.js"],"names":["React","Component","Cookies","NewTransaction","Table","newRecord","state","owner","get","transactions","currentName","sharedBy","numShared","intervalIsSet","errors","getTransactionFromDb","fetch","then","json","res","setState","addSharedBy","name","temp","push","num","console","log","componentDidMount","interval","setInterval","getDataFromDb","componentWillUnmount","clearInterval","render","columns","Header","accessor","e","target","value"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Cookies from \"js-cookie\";\nimport NewTransaction from \"./NewTransaction\";\nimport Table from \"react-table-6\";\nimport 'react-table-6/react-table.css'\n\nclass newRecord extends Component {\n  state = {\n    owner: Cookies.get(\"name\"),\n    transactions: [],\n    currentName: null,\n    sharedBy: [Cookies.get(\"name\")],\n    numShared: 1,\n    intervalIsSet: false,\n    errors: {}\n  };\n\n  componentDidMount() {\n    this.getTransactionFromDb();\n    if (!this.state.intervalIsSet) {\n      let interval = setInterval(this.getDataFromDb, 1000);\n      this.setState({ intervalIsSet: interval });\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.state.intervalIsSet) {\n      clearInterval(this.state.intervalIsSet);\n      this.setState({ intervalIsSet: null });\n    }\n  }\n\n  getTransactionFromDb = () => {\n    fetch('http://localhost:3001/api/getTransaction')\n      .then((transactions) => transactions.json())\n      .then((res) => this.setState({ transactions: res.transactions}));\n  };\n\n  addSharedBy = (name) => {\n    var temp = [...this.state.sharedBy];\n    temp.push(name);\n    this.setState({sharedBy: temp});\n    var num = this.state.numShared + 1;\n    this.setState({numShared:num});\n    console.log(this.state.sharedBy);\n    console.log(this.state.numShared);\n    console.log(this.state.currentName);\n    console.log(this.state.owner);\n  };\n\n\n  \n  render() {\n    const columns = [\n            {\n              Header: 'Payer',\n              accessor: 'payer',\n            },\n            {\n              Header: 'Amount',\n              accessor: 'amount',\n            },\n            {\n              Header: 'Shared With',\n              accessor: 'sharedBy',\n            },\n            {\n              Header: 'Comment',\n              accessor: 'comment',\n            },\n          ]\n\n    return (\n      <div>\n        \n          Creating new record for {this.state.owner}...\n          <label>\n            Shared with:\n            <input type=\"text\" placeholder=\"name\" onChange={(e) => this.setState({ currentName: e.target.value })}></input>\n            <button onClick={() =>this.addSharedBy(this.state.currentName)}>Add Sharer</button>\n          </label>\n          \n        <div>\n          <Table columns={columns} data={this.state.transactions} />\n        </div>    \n        <div>\n        <NewTransaction sharedPeople={this.state.sharedBy} num={this.state.numShared}  />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default newRecord;\n"]},"metadata":{},"sourceType":"module"}